package io.baselines.sample.di

import io.baselines.sample.initializer.AppConfigInitializerDelegate
import io.baselines.sample.initializer.AppConfigInitializerDelegateImpl
import me.tatarka.inject.annotations.Component
import me.tatarka.inject.annotations.Provides
import software.amazon.lastmile.kotlin.inject.anvil.AppScope
import software.amazon.lastmile.kotlin.inject.anvil.MergeComponent
import software.amazon.lastmile.kotlin.inject.anvil.SingleIn

@MergeComponent(AppScope::class)
@SingleIn(AppScope::class)
abstract class IosAppComponent(
    @Component override val platformComponent: PlatformComponent
) : AppComponent {

    abstract val uiComponentFactory: IosUiComponent.Factory

    val AppConfigInitializerDelegateImpl.bind: AppConfigInitializerDelegate
        @Provides get() = this

    companion object
}

// Suppressing the error, function is generated by KSP
@Suppress("NO_ACTUAL_FOR_EXPECT")
@MergeComponent.CreateComponent
expect fun createAppComponent(platformComponent: PlatformComponent): IosAppComponent
